@using TableApp.Data
@using TableApp.Models

<div class="table-container">
    <table class="table">
        <thead class="table-light">
        <tr>
            @foreach (TableColumn c in ColumnsSet!)
            {
                <th scope="col" class="sort-th" @onclick="@(() => SortTableAsync(c.ColumnId))">
                    <div class="header-container">
                        <div class="header-title">@c.ColumnName</div>
                        <div class="header-icon">
                            <i class="bi @SetSortIcon(c.ColumnId)"></i>
                        </div>
                    </div>
                </th>
            }

        </tr>
        </thead>
        <tbody>
        @if (_records == null)
        {
            <tr class="spinner"></tr>
        }
        else
        {
            @foreach (Record e in _records)
            {
                <tr scope="row">
                    <td>@e.PriceHub</td>
                    <td>@e.HighPrice</td>
                    <td>@e.LowPrice</td>
                    <td>@e.WtdAvgPrice</td>
                    <td>@e.Change</td>
                    <td>@e.DailyVolume</td>
                    <td>
                        <div class="dates-icon" @onclick="@(() => SetExpandedId(e.Id))">
                            <i class="bi @SetExpandIcon(e.Id)"></i>
                        </div>
                        <div class="dates @_expandedClass @ExpandDates(e.Id)">
                            <b>Trade:</b> @e.TradeDate.ToString("dd.MM.yyyy")
                            <br />
                            <b>Delivery start:</b> @e.DeliveryStartDate.ToString("dd.MM.yyyy")
                            <br />
                            <b>Delivery end:</b> @e.DeliveryEndDate.ToString("dd.MM.yyyy")
                        </div>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>
<div class="pagination">
    <button class="btn btn-custom" @onclick=@(async ()=>await NavigateToPage("previous"))>Prev</button>
    @for (int i = startPage; i <= endPage; i++)
    {
        var currentPage = i;
        <button class="btn btn-custom pagebutton @(currentPage==curPage?"btn-danger":"")" @onclick=@(async () =>await RefreshRecords(currentPage))>
            @currentPage
        </button>
    }
    <button class="btn btn-custom" @onclick=@(async ()=>await NavigateToPage("next"))>Next</button>
</div>
